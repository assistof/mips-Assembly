#Exercicio 01

.data
mens1: .asciiz "\n Digite o valor de n : "
mens2: .asciiz "\n Digite o valor de X : "
mens3: .asciiz "\n x * 2^n : "

# s0 = n , s1 = X

.text
.globl main
main:
	addi $v0 , $zero , 4
	la $a0 , mens1
	syscall
	addi $v0, $zero , 5
	syscall
	add $s0, $zero , $v0
	addi $v0 , $zero ,4
	la $a0 , mens2
	syscall
	addi $v0 , $zero , 5
	syscall
	add $s1 , $zero , $v0
	addi $s2 , $zero , 1
	addi $a0 , $zero , 2
	addi $a1 , $zero , 2
Loop:	
	slt $t0 , $s2 , $s0
	beq $t0 , $zero , Exit
	jal multi
	add $a0 , $zero , $v0
	addi $s2 , $s2 , 1
	j Loop
Exit:
	add $t1 , $zero , $v0
	add $a0 , $zero , $t1
	add $a1 , $zero , $s1
	jal multi
	add $t1 , $zero , $v0
	la $a0 , mens3
	addi $v0 , $zero , 4
	syscall
	add $a0 , $zero , $t1
	addi $v0 , $zero , 1
	syscall
	addi $v0 , $zero , 10
	syscall	# FIM
multi:
	addi $sp ,$sp , -4
	add $v0 , $zero , $zero
	sw $s0 , 0($sp)
	addi $s0 , $zero , 0
Loop2:	slt $t0 , $s0 , $a1
	beq $t0 , $zero , Exit2
	add $v0 , $v0 , $a0
	addi $s0 , $s0 , 1
	j Loop2
Exit2:
	lw $s0 , 0($sp)
	addi $sp , $sp , 4
	jr $ra
